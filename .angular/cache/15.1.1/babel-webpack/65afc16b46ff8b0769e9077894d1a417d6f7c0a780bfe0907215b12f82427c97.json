{"ast":null,"code":"import { environment } from '../environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductoService {\n  constructor(http) {\n    this.http = http;\n    this.resultados = [];\n  }\n  listaProductos() {\n    this.http.get(environment.productoAPI).subscribe(res => {\n      this.resultados = res;\n      console.log(this.resultados);\n    });\n  }\n  postCrearPost(formBody) {\n    return this.http.post(`${environment.productoAPI}/CrearProducto`, formBody);\n  }\n}\nProductoService.ɵfac = function ProductoService_Factory(t) {\n  return new (t || ProductoService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductoService,\n  factory: ProductoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADjB,eAAU,GAAwB,EAAE;EACH;EAIxCC,cAAc;IACZ,IAAI,CAACD,IAAI,CAACE,GAAG,CAAsBL,WAAW,CAACM,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;MAC1E,IAAI,CAACC,UAAU,GAAGD,GAAG;MACrBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,UAAU,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEAG,aAAa,CAACC,QAAa;IACzB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,GAAGd,WAAW,CAACM,WAAW,gBAAgB,EAAEO,QAAQ,CAAC;EAC7E;;AAhBWZ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAc,SAAfd,eAAe;EAAAe,YAFd;AAAM","names":["environment","ProductoService","constructor","http","listaProductos","get","productoAPI","subscribe","res","resultados","console","log","postCrearPost","formBody","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lchavesta\\OneDrive\\Escritorio\\Ecommerce\\Ecommerce\\src\\app\\services\\producto.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../environments/environments';\nimport { ProductoInterface } from '../interfaces/producto.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductoService {\n\n  public resultados: ProductoInterface[] = []\n  constructor(private http: HttpClient) { }\n\n\n\n  listaProductos():void {\n    this.http.get<ProductoInterface[]>(environment.productoAPI).subscribe(res => {\n      this.resultados = res\n      console.log(this.resultados)\n    })\n  }\n\n  postCrearPost(formBody: any){\n    return this.http.post(`${environment.productoAPI}/CrearProducto`, formBody)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}