{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorTailorModule } from '@ngneat/error-tailor';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, ErrorTailorModule.forRoot({\n    errors: {\n      useValue: {\n        required: 'Campo Requerido',\n        minlength: ({\n          requiredLength,\n          actualLength\n        }) => `Expect ${requiredLength} but got ${actualLength}`,\n        invalidAddress: error => `Address isn't valid`\n      }\n    }\n  }), SharedModule, RouterModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAAQC,gBAAgB,QAAO,sBAAsB;AACrD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,iBAAiB,QAAQ,sBAAsB;AA+BjD,IAAMC,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,eA7BrBV,QAAQ,CAAC;EACRW,YAAY,EAAE,CACZR,YAAY,CACb;EACDS,OAAO,EAAE,CACPX,aAAa,EACbC,gBAAgB,EAChBK,WAAW,EACXC,mBAAmB,EACnBC,iBAAiB,CAACI,OAAO,CAAC;IACxBC,MAAM,EAAE;MACNC,QAAQ,EAAE;QACRC,QAAQ,EAAE,iBAAiB;QAC3BC,SAAS,EAAE,CAAC;UAAEC,cAAc;UAAEC;QAAY,CAAE,KAChC,UAAUD,cAAc,YAAYC,YAAY,EAAE;QAC9DC,cAAc,EAAEC,KAAK,IAAI;;;GAG9B,CAAC,EACFjB,YAAY,EACZE,YAAY,EACZD,gBAAgB,CAEjB;EACDiB,SAAS,EAAE,EAEV;EACDC,SAAS,EAAE,CAACpB,YAAY;CACzB,CAAC,GACWO,SAAS,CAAI;SAAbA,SAAS","names":["NgModule","BrowserModule","AppRoutingModule","AppComponent","SharedModule","HttpClientModule","RouterModule","FormsModule","ReactiveFormsModule","ErrorTailorModule","AppModule","declarations","imports","forRoot","errors","useValue","required","minlength","requiredLength","actualLength","invalidAddress","error","providers","bootstrap"],"sourceRoot":"","sources":["C:\\Users\\User\\Documents\\Desarrollo\\Ecommerce\\Ecommece\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport {HttpClientModule} from '@angular/common/http'\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ErrorTailorModule } from '@ngneat/error-tailor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ErrorTailorModule.forRoot({\r\n      errors: {\r\n        useValue: {\r\n          required: 'Campo Requerido',\r\n          minlength: ({ requiredLength, actualLength }) => \r\n                      `Expect ${requiredLength} but got ${actualLength}`,\r\n          invalidAddress: error => `Address isn't valid`\r\n        }\r\n      }\r\n    }),\r\n    SharedModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n    \r\n  ],\r\n  providers: [\r\n    \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}