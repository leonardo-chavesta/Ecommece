{"ast":null,"code":"import { environment } from '../environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductoService {\n  constructor(http) {\n    this.http = http;\n    this.resultadoCarrito = [];\n    this.resultados = [];\n    this.resultadosXIdUsuario = [];\n  }\n  listaProductos() {\n    this.http.get(`${environment.productoAPI}/ListarProducto`).subscribe(res => {\n      this.resultados = res;\n    });\n  }\n  listaProductosPorFiltro(formBody) {\n    this.http.post(`${environment.productoAPI}/listarproductoasync/filtro`, formBody).subscribe(res => {\n      this.resultados = res;\n    });\n  }\n  postCrearProducto(formBody) {\n    return this.http.post(`${environment.productoAPI}/CrearProducto`, formBody);\n  }\n  getDetalleProducto(id) {\n    return this.http.get(`${environment.productoAPI}/ObtenerProducto/${id}`);\n  }\n  eliminarProducto(id) {\n    return this.http.delete(`${environment.productoAPI}/EliminarProducto/${id}`);\n  }\n  eviarCarrito(formBody) {\n    return this.http.post(`${environment.carritoAPI}/CrearCarrito`, formBody);\n  }\n  listaCarritoProducto() {\n    this.http.get(`${environment.carritoAPI}/Listar`).subscribe(res => {\n      this.resultadoCarrito = res;\n    });\n  }\n  eliminarProductoDelCarrito(id) {\n    return this.http.delete(`${environment.carritoAPI}/EliminarDelCarrito/${id}`);\n  }\n  buscarProductosPorIdUsuario(id) {\n    this.http.get(`${environment.productoAPI}/BuscarProductoXIdUsuario/${id}`).subscribe(res => {\n      this.resultadosXIdUsuario = res;\n      console.log(res);\n    });\n  }\n}\nProductoService.ɵfac = function ProductoService_Factory(t) {\n  return new (t || ProductoService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductoService,\n  factory: ProductoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHjB,qBAAgB,GAAgC,EAAE;IAClD,eAAU,GAAwB,EAAE;IACpC,yBAAoB,GAAwB,EAAE;EACb;EAExCC,cAAc;IACZ,IAAI,CAACD,IAAI,CAACE,GAAG,CAAsB,GAAGL,WAAW,CAACM,WAAW,iBAAiB,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;MAC9F,IAAI,CAACC,UAAU,GAAGD,GAAG;IACvB,CAAC,CAAC;EACJ;EACAE,uBAAuB,CAACC,QAAwB;IAC9C,IAAI,CAACR,IAAI,CAACS,IAAI,CAAsB,GAAGZ,WAAW,CAACM,WAAW,6BAA6B,EAAEK,QAAQ,CAAC,CAACJ,SAAS,CAACC,GAAG,IAAG;MACrH,IAAI,CAACC,UAAU,GAAGD,GAAG;IACvB,CAAC,CAAC;EACJ;EAEAK,iBAAiB,CAACF,QAAa;IAC7B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,GAAGZ,WAAW,CAACM,WAAW,gBAAgB,EAAEK,QAAQ,CAAC;EAC7E;EACAG,kBAAkB,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAoB,GAAGL,WAAW,CAACM,WAAW,oBAAoBS,EAAE,EAAE,CAAC;EAC7F;EACAC,gBAAgB,CAACD,EAAU;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACc,MAAM,CAAC,GAAGjB,WAAW,CAACM,WAAW,qBAAqBS,EAAE,EAAE,CAAC;EAC9E;EACAG,YAAY,CAACP,QAAa;IACxB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,GAAGZ,WAAW,CAACmB,UAAU,eAAe,EAAER,QAAQ,CAAC;EAC3E;EACAS,oBAAoB;IAClB,IAAI,CAACjB,IAAI,CAACE,GAAG,CAA8B,GAAGL,WAAW,CAACmB,UAAU,SAAS,CAAC,CAACZ,SAAS,CAACC,GAAG,IAAG;MAC7F,IAAI,CAACa,gBAAgB,GAAGb,GAAG;IAC7B,CAAC,CAAC;EACJ;EACAc,0BAA0B,CAACP,EAAU;IACnC,OAAO,IAAI,CAACZ,IAAI,CAACc,MAAM,CAAC,GAAGjB,WAAW,CAACmB,UAAU,uBAAuBJ,EAAE,EAAE,CAAC;EAC/E;EAEAQ,2BAA2B,CAACR,EAAU;IACpC,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAsB,GAAGL,WAAW,CAACM,WAAW,6BAA6BS,EAAE,EAAE,CAAC,CAACR,SAAS,CAACC,GAAG,IAAG;MAC9G,IAAI,CAACgB,oBAAoB,GAAGhB,GAAG;MAE/BiB,OAAO,CAACC,GAAG,CAAClB,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;;AA7CWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAA0B,SAAf1B,eAAe;EAAA2B,YAFd;AAAM","names":["environment","ProductoService","constructor","http","listaProductos","get","productoAPI","subscribe","res","resultados","listaProductosPorFiltro","formBody","post","postCrearProducto","getDetalleProducto","id","eliminarProducto","delete","eviarCarrito","carritoAPI","listaCarritoProducto","resultadoCarrito","eliminarProductoDelCarrito","buscarProductosPorIdUsuario","resultadosXIdUsuario","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lchavesta\\OneDrive\\Escritorio\\Ecommerce\\Ecommerce\\src\\app\\services\\producto.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../environments/environments';\r\nimport { ProductoInterface, BuscarProducto, CarritoProductosInterface } from '../interfaces/producto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductoService {\r\n\r\n  public resultadoCarrito: CarritoProductosInterface[] = []\r\n  public resultados: ProductoInterface[] = []\r\n  public resultadosXIdUsuario: ProductoInterface[] = []\r\n  constructor(private http: HttpClient) { }\r\n\r\n  listaProductos(): void {\r\n    this.http.get<ProductoInterface[]>(`${environment.productoAPI}/ListarProducto`).subscribe(res => {\r\n      this.resultados = res\r\n    })\r\n  }\r\n  listaProductosPorFiltro(formBody: BuscarProducto) {\r\n    this.http.post<ProductoInterface[]>(`${environment.productoAPI}/listarproductoasync/filtro`, formBody).subscribe(res => {\r\n      this.resultados = res\r\n    })\r\n  }\r\n  \r\n  postCrearProducto(formBody: any) {\r\n    return this.http.post(`${environment.productoAPI}/CrearProducto`, formBody)\r\n  }\r\n  getDetalleProducto(id: number) {\r\n    return this.http.get<ProductoInterface>(`${environment.productoAPI}/ObtenerProducto/${id}`)\r\n  }\r\n  eliminarProducto(id: number) {\r\n    return this.http.delete(`${environment.productoAPI}/EliminarProducto/${id}`)\r\n  }\r\n  eviarCarrito(formBody: any) {\r\n    return this.http.post(`${environment.carritoAPI}/CrearCarrito`, formBody)\r\n  }\r\n  listaCarritoProducto(): void {\r\n    this.http.get<CarritoProductosInterface[]>(`${environment.carritoAPI}/Listar`).subscribe(res => {\r\n      this.resultadoCarrito = res\r\n    })\r\n  }\r\n  eliminarProductoDelCarrito(id: number) {\r\n    return this.http.delete(`${environment.carritoAPI}/EliminarDelCarrito/${id}`)\r\n  }\r\n\r\n  buscarProductosPorIdUsuario(id: number){\r\n    this.http.get<ProductoInterface[]>(`${environment.productoAPI}/BuscarProductoXIdUsuario/${id}`).subscribe(res => {\r\n      this.resultadosXIdUsuario = res\r\n\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}