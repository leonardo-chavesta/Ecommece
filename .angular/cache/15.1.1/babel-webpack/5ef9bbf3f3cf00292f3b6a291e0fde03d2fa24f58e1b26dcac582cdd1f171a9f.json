{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorTailorModule } from '@ngneat/error-tailor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngneat/error-tailor\";\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, ErrorTailorModule.forRoot({\n    errors: {\n      useValue: {\n        required: 'Campo Requerido',\n        minlength: ({\n          requiredLength,\n          actualLength\n        }) => `Expect ${requiredLength} but got ${actualLength}`,\n        invalidAddress: error => `Address isn't valid`\n      }\n    }\n  }), SharedModule, RouterModule, HttpClientModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, i1.ErrorTailorModule, SharedModule, RouterModule, HttpClientModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAAQC,gBAAgB,QAAO,sBAAsB;AACrD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,iBAAiB,QAAQ,sBAAsB;;;AA+BxD,OAAM,MAAOC,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRR,YAAY;AAAA;AAEbO,SAAS;YAxBlBT,aAAa,EACbC,gBAAgB,EAChBK,WAAW,EACXC,mBAAmB,EACnBC,iBAAiB,CAACG,OAAO,CAAC;IACxBC,MAAM,EAAE;MACNC,QAAQ,EAAE;QACRC,QAAQ,EAAE,iBAAiB;QAC3BC,SAAS,EAAE,CAAC;UAAEC,cAAc;UAAEC;QAAY,CAAE,KAChC,UAAUD,cAAc,YAAYC,YAAY,EAAE;QAC9DC,cAAc,EAAEC,KAAK,IAAI;;;GAG9B,CAAC,EACFhB,YAAY,EACZE,YAAY,EACZD,gBAAgB;AAAA;;2EAQPK,SAAS;IAAAW,eA3BlBlB,YAAY;IAAAmB,UAGZrB,aAAa,EACbC,gBAAgB,EAChBK,WAAW,EACXC,mBAAmB,wBAWnBJ,YAAY,EACZE,YAAY,EACZD,gBAAgB;EAAA;AAAA","names":["BrowserModule","AppRoutingModule","AppComponent","SharedModule","HttpClientModule","RouterModule","FormsModule","ReactiveFormsModule","ErrorTailorModule","AppModule","bootstrap","forRoot","errors","useValue","required","minlength","requiredLength","actualLength","invalidAddress","error","declarations","imports"],"sourceRoot":"","sources":["C:\\Users\\lchavesta\\OneDrive\\Escritorio\\Ecommerce\\Ecommerce\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport {HttpClientModule} from '@angular/common/http'\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorTailorModule } from '@ngneat/error-tailor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ErrorTailorModule.forRoot({\n      errors: {\n        useValue: {\n          required: 'Campo Requerido',\n          minlength: ({ requiredLength, actualLength }) => \n                      `Expect ${requiredLength} but got ${actualLength}`,\n          invalidAddress: error => `Address isn't valid`\n        }\n      }\n    }),\n    SharedModule,\n    RouterModule,\n    HttpClientModule,\n    \n  ],\n  providers: [\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}